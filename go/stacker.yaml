config:
  prerequisites:
    - ../layers/minbase/stacker.yaml

buildenv-pkg:
  build_only: true
  from:
    type: built
    tag: minbase
  imports:
    - https://go.dev/dl/go1.20.8.linux-amd64.tar.gz
  run: |
    pkgtool install gcc git libc6-dev make pkg-config \
      libcap-dev libacl1-dev libsquashfs-dev libdevmapper-dev \
      libcryptsetup-dev

    target="/usr/lib"
    fail() { echo "$@" 1>&2; exit 1; }
    tarball=$(echo /stacker/imports/go*.tar.gz)
    [ -f "$tarball" ] || fail "$tarball: not a file"
    bn=${tarball##*/}
    version=$(echo "$bn" | sed 's,go\([0-9.]*\)[.].*,\1,')
    echo "version=$version"
    majmin=${version%.*}

    maj_min_d="${target}/go-$majmin"
    [ ! -d "$maj_min_d" ] || fail "$maj_min_d exists"
    TEMP_D=$(mktemp -d "${TMPDIR:-/tmp}/${0##*/}.XXXXXX") || fail
    trap "rm -Rf $TEMP_D" EXIT

    echo "extracting $tarball to tmpdir"
    tar -C "$TEMP_D" -xf "$tarball" \
        --show-transformed-names --transform "s/^go/go-$majmin/"
    start_d="$PWD"
    cd ${TEMP_D}
    for e in *; do
        [ "$e" = "go-$majmin" ] ||
            fail "Unexpected files created by extract: $(echo *)"
    done

    mv "go-$majmin" "$target/" || fail "failed to install to $target/go-$majmin"
    ln -sf $maj_min_d/bin/go /usr/bin/go

    go version

build-pkg:
  build_only: true
  from:
    type: built
    tag: buildenv-pkg
  binds:
    - ${{TOP_D}} -> /build/bootkit
  run: |
    cd /build/bootkit/
    export GOPATH=/build/bootkit/.go
    export GOCACHE=$GOPATH/cache

    make go-build
